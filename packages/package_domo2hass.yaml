## Package file for Home Assistant, used for getting Domoticz data via MQTT 
## Type: Home Assistant yaml file
## Date: 17-11-2019
## Author: R.Bisschops
##
## Changelog:
## V0.1.0:  First version
## V0.2.0:  Updated with additional input booleans
## V0.3.0:  Added switches that copies bahaviour of HA Bridge sensors
## V0.3.1:  Removed sensors from domo, removed groups
## V0.3.2:  Removed sensors from domo, removed groups
## V0.4.0:  Code cleaned, removed all code for environental sensors
## V0.5.0:  Added code for receiving Domoticz data from switches 
##          (lighting2 and Light/Switch types)
## V0.5.1:  Removed domo entertainment switch
## V0.5.2:  Added sunscreen switch (first version)
## V0.6.0:  Added automations and script for electricity meters
## V0.6.1:  Updated automation for storing E high and low values (swapped them)
## V0.6.2:  Added retain flag for mqtt utility sensors
## V0.7.0:  Code cleanup and changes to entities, package ready for migration to new homeserver
## V0.8.0:  Added seperate automations for various Domo light controls 
##          to avoid script already running error
## V0.8.1:  Removed script requirement for domo2hass script chistmastree (test)

###############################################################################
##  Homeassistant settings
###############################################################################
homeassistant:

###############################################################################
##  Entities
###############################################################################
input_boolean:
  ## Light switches
  domo_garden_light:
    name: Verlichting tuin
  domo_porch_light:
    name: Buiten lamp
  domo_hallway_light:
    name: Verlichting halletje
  domo_kitchen_cabinets:
    name: Verlichting hoge kasten (KaKu)
  domo_bar_light:
    name: Verlichting bar
  domo_christmastree:
    name: Kerstboom
  ## Other switches
  domo_water_ornament:
    name: Waterbollen tuin
  domo_sunscreen:
    name: Zonnescherm

###############################################################################
##  Groups
###############################################################################
group:


###############################################################################
#  Automations
###############################################################################
automation:
  ## Publish a switch to Domoticz
  ## Obsolete since V0.8.0, remove after a while
  # - alias: Domoticz publish switch
  #   hide_entity: false
  #   initial_state: 'on'  
  #   trigger:     
  #     platform: state
  #     entity_id:
        # - input_boolean.domo_entertainment
        # - input_boolean.domo_garden_light
        # - input_boolean.domo_porch_light
        # - input_boolean.domo_hallway_light
        # - input_boolean.domo_kitchen_cabinets
        # - input_boolean.domo_christmastree
        # - input_boolean.domo_bar_light
        # - input_boolean.domo_water_ornament
        # - input_boolean.domo_sunscreen
    # condition:
    # action:
    #   - service: script.domoticz_switch
    #     data_template:
    #       device: '{{ trigger.to_state.attributes.friendly_name }}'
    #       new_state: >-
    #         {{ trigger.to_state.state }}
  
  ## Added V0.8.1
  ## Publish christmas tree light switch to Domoticz
  - alias: Domoticz publish - Kerstboom
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - input_boolean.domo_christmastree
    condition:
    action:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {{ {
             "command": "switchlight",
             "idx": 26,
             "switchcmd": trigger.to_state.state|capitalize
            }|tojson }}

  ## Added V0.8.0
  ## Publish garden light switch to Domoticz
  - alias: Domoticz publish - Tuinverlichting
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - input_boolean.domo_garden_light
    condition:
    action:
      - service: script.domoticz_gardenlights
        data_template:
          device: 28
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish garden light switch to Domoticz
  - alias: Domoticz publish - Tuinverlichting
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - input_boolean.domo_garden_light
    condition:
    action:
      - service: script.domoticz_gardenlights
        data_template:
          device: 28
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish garden light switch to Domoticz
  - alias: Domoticz publish - Buitenlamp
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_porch_light
    condition:
    action:
      - service: script.domoticz_porchlight
        data_template:
          device: 20
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish hallway light switch to Domoticz
  - alias: Domoticz publish - Halletje
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_hallway_light
    condition:
    action:
      - service: script.domoticz_hallway
        data_template:
          device: 21
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish kitchen cabinets light switch to Domoticz
  - alias: Domoticz publish - Hoge kasten
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_kitchen_cabinets
    condition:
    action:
      - service: script.domoticz_kitchen_cabinets
        data_template:
          device: 23
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish kitchen cabinets light switch to Domoticz
  - alias: Domoticz publish - Lampen bar
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_bar_light
    condition:
    action:
      - service: script.domoticz_bar_lights
        data_template:
          device: 27
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish water ornament switch to Domoticz
  - alias: Domoticz publish - Waterbollen
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_water_ornament
    condition:
    action:
      - service: script.domoticz_water_ornament
        data_template:
          device: 29
          new_state: >-
            {{ trigger.to_state.state }}
  ## Publish sunscreen switch to Domoticz
  - alias: Domoticz publish - Zonnescherm 
    hide_entity: false
    initial_state: 'on'
    trigger:     
      platform: state
      entity_id:
        - input_boolean.domo_sunscreen
    condition:
    action:
      - service: script.domoticz_sunscreen
        data_template:
          device: 30
          new_state: >-
            {{ trigger.to_state.state }}

  ## Convert Domoticz Zigbee switch (type Light/Switch) to Hass 
  - alias: Read domoticz Zigbee switch via MQTT
    hide_entity: false
    initial_state: 'on'
    trigger:
      - platform: mqtt
        topic: 'domoticz/out'
    condition:
      condition: template
      value_template: 
        '{{ trigger.payload_json.dtype == "Light/Switch" }}'
    action:
      - service: script.domoticz_input
        data_template:
          device: '{{ trigger.payload_json.idx }}'
          state: >-
            {{ trigger.payload_json.svalue1 }}

  ## Convert Domoticz CoCo switch (type Lighting 2) to Hass 
  - alias: Read domoticz CoCo switch via MQTT
    hide_entity: false
    initial_state: 'on'
    trigger:
      - platform: mqtt
        topic: 'domoticz/out'
    condition:
      condition: template
      value_template: 
        '{{ trigger.payload_json.dtype == "Lighting 2" }}'
    action:
      - service: script.domoticz_input
        data_template:
          device: '{{ trigger.payload_json.idx }}'
          state: >-
            {{ trigger.payload_json.nvalue }}    

  # Added V0.6.0
  ## Convert Domoticz Energy meters to Hass
  ## Elektra meter will sent svalue1, svalue2, svalue5
  - alias: Domoticz Elektra waarden via MQTT
    hide_entity: false
    initial_state: 'on'  
    trigger:
      - platform: mqtt
        topic: 'domoticz/out'
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.dtype == "P1 Smart Meter" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.name == "Elektra" }}'
    action: 
      - service: script.domoticz_electricity
        data_template:
          device: '{{ trigger.payload_json.name }}'
          low: '{{ trigger.payload_json.svalue1 }}' 
          high: '{{ trigger.payload_json.svalue2 }}'
          current: '{{ trigger.payload_json.svalue5 }}'
  ## Gas meter will sent svalue1
  - alias: Domoticz Gas waarden via MQTT
    hide_entity: false
    initial_state: 'on'  
    trigger:
      - platform: mqtt
        topic: 'domoticz/out'
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.dtype == "P1 Smart Meter" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.name == "Gas" }}'        
    action: 
      - service: script.domoticz_gas
        data_template:
          device: '{{ trigger.payload_json.name }}'
          usage: '{{ trigger.payload_json.svalue1 }}' 
  ## Water meter will sent  
  - alias: Domoticz Water waarden via MQTT
    hide_entity: false
    initial_state: 'on'  
    trigger:
      - platform: mqtt
        topic: 'domoticz/out'
    condition:
      condition: and
      conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.dtype == "RFXMeter" }}'
      - condition: template
        value_template: '{{ trigger.payload_json.name == "Water" }}'        
    action: 
      - service: script.domoticz_water
        data_template:
          device: '{{ trigger.payload_json.name }}'
          usage: '{{ trigger.payload_json.svalue1 }}' 

###############################################################################
##  Templates
###############################################################################


###############################################################################
##  Scripts
###############################################################################
script:
  #############################################################################
  ## Added V0.8
  ## Scripts for converting and setting Domoticz switches via MQTT.
  ## ID is transferred from respective automation
  ## The Domoticz API call is packed in JSON and sent to the MQTT topic 
  ## domoticz/in as the payload.
  ############################################################################# 

  ## Sent Christamstree to Domoticz 
  domoticz_christmastree:  
    alias: Set christmastree via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent Gardenlights to Domoticz 
  domoticz_gardenlights:  
    alias: Set gardenlights via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent porchlight to Domoticz 
  domoticz_porchlight:  
    alias: Set porchlight via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent hallway lights to Domoticz 
  domoticz_hallway:  
    alias: Set hallwaylights via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent kitchen high cabinets to Domoticz 
  domoticz_kitchen_cabinets:  
    alias: Set high cabinets via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent kitchen bar lights to Domoticz 
  domoticz_bar_lights:  
    alias: Set bar lights via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent water ornament to Domoticz 
  domoticz_water_ornament:  
    alias: Set water ornament via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}
  ## Sent sunscreen to Domoticz 
  domoticz_sunscreen:  
    alias: Set sunscreen via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set new_state = new_state|capitalize %}
            {% set device = device|int %}
            {{ {
             "command": "switchlight",
             "idx": device,
             "switchcmd": new_state
            }|tojson }}

  #############################################################################
  ## Script for converting and setting Domoticz switches via MQTT.
  ## Uses a dict to lookup the ID of the switch in Domoticz.
  ## Uses a dict to convert state to a state recognized by Domoticz.
  ## The Domoticz API call is packed in JSON and sent to the MQTT topic 
  ## domoticz/in as the payload.
  ##
  ## Obsolete since V0.8.0, remove after a while
  ############################################################################# 

  ## Convert Hass switch to Domoticz

  domoticz_switch:  
    alias: Set domoticz switch via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'domoticz/in'
          payload_template: >-
            {% set domoticz_devices = 
              {
              "Buiten lamp": 20,
              "Kerstboom": 26,
              "Verlichting tuin": 28,
              "Verlichting halletje": 21,
              "Verlichting hoge kasten (KaKu)": 23,
              "Verlichting bar": 27,
              "Waterbollen tuin": 29,
              "Zonnescherm": 30
              } 
            %}
            {% set status =
              {
              "on": "On",
              "off": "Off"
              }
            %}
            {% set id = domoticz_devices[device] %}
            {% set new_state = status[new_state] %}
            {{ {
             "command": "switchlight",
             "idx": id,
             "switchcmd": new_state
            }|tojson }}

  ## Convert Domoticz switch to Hass 
  domoticz_input:
    alias: Receive domoticz switch via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/switch/100/switch'
          payload_template: >-
            {% set payload = "n/a" %}
            {% if state == "0" %}
            {% set payload = 'off' %}  
            {% elif state == "1" %}
            {% set payload = 'on' %} 
            {% endif %}
            {{ {
             "command": payload,
             "source": device
            }|tojson }}

  ## Added V0.8
  ## Read electiricity values from Domoticz
  domoticz_electricity:
    alias: Receive domoticz elektra readings via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/meter/electricity'
          retain: true
          payload_template: >-
            {{ {
              "device": device,
              "usage_high": high,
              "usage_low": low,
              "current_usage": current
            }|tojson }}

  ## Added V0.8
  ## Read gas values from Domoticz
  domoticz_gas:
    alias: Receive domoticz gas readings via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/meter/gas'
          retain: true
          payload_template: >-
            {{ {
              "device": device,
              "usage": usage,
            }|tojson }}

  ## Added V0.8
  ## Read gas values from Domoticz
  domoticz_water:
    alias: Receive domoticz water readings via MQTT
    sequence:
      - service: mqtt.publish
        data_template:
          topic: 'home/meter/water'
          retain: true
          payload_template: >-
            {{ {
              "device": device,
              "usage": usage,
            }|tojson }}

###############################################################################
##  Timers
###############################################################################
