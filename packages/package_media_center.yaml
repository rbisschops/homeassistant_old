# Package file for Home Assistant, used for mediacenter
# Type: Home Assistant yaml file
# Date: 19-01-2019
# Author: R.Bisschops
#
# Changelog:
# V0.1.0:  First version
# V0.2.0:  Added tradfri entertainment switch (replaces domo switch)  
# V0.2.1:  Removed domo entertainment switch 
# V0.2.2:  Updated friendly names
# V0.2.3:  Added HA Bridge selectors and commands
# V0.2.4:  Added switches for Netflix and Spotify (after Harmony update)
# V0.3.0:  Added lighting setting for video modes
# V0.3.1:  Added test input and automation for Harmony hub commands, remove later
# V0.3.2:  Added setting the video mode input selector. Used for switching lights on in the right mode 

###############################################################################
#                              Homeassistant settings
###############################################################################
homeassistant:
  customize:
    ## Harmony Hub remote
    remote.bisschops:
      friendly_name: Harmony Hub
      entity_picture: /local/harmony_icon.jpg

    ## Media devices from HA Bridge 
    binary_sensor.habridge_television:
      friendly_name: Televisie
    binary_sensor.habridge_smarttv:
      friendly_name: Smart-TV
    binary_sensor.habridge_mediaplayer:
      friendly_name: Mediaplayer
    binary_sensor.habridge_appletv:
      friendly_name: Apple-TV
    binary_sensor.habridge_radio:
      friendly_name: Radio
    binary_sensor.habridge_music:
      friendly_name: Muziek
    binary_sensor.habridge_netflix:
      friendly_name: Netflix
    binary_sensor.habridge_spotify:
      friendly_name: Spotify

    ## Media devices from Harmony
    switch.poweroff:
      friendly_name: PowerOff      
    switch.television:
      friendly_name: Televisie    
    switch.mediaplayer:
      friendly_name: Mediaplayer    
    switch.appletv:
      friendly_name: Apple-TV    
    switch.radio:
      friendly_name: Radio    
    switch.music:
      friendly_name: Muziek    
    switch.dvd:
      friendly_name: DVD    
    switch.teletext:
      friendly_name: Teletekst    
    switch.smarttv:
      friendly_name: Smart-TV
    # Added in V0.2.4    
    switch.netflix:
      friendly_name: Netflix
    switch.spotify:
      friendly_name: Spotify

    ## Media player switch-on delay  
    timer.media_center_delay:
      friendly_name: Inschakelvertraging

## Remotes
remote:
  - platform: harmony
    name: bisschops
    host: !secret ip_harmony_hub

## Media players
#  LG television
media_player:
  - platform: webostv
    host: !secret ip_lgtelevision
    name: Living Room TV
    filename: webostv.conf
    timeout: 5
    turn_on_action:
      service: persistent_notification.create
      data:
        message: "Turn on action"
    customize:
      sources:
        - Netflix
        - Set-top Box
        - Spotify Music - Luister gratis op LG TV

###############################################################################
#                              Entities
###############################################################################
input_select: 
  # Harmony activities that can be set with the Harmony Hub
  harmony_livingroom:
    name: Activiteiten Harmony 
    options:
      - Televisie
      - Smart-TV
      - Netflix
      - Spotify
      - Mediaplayer
      - Apple-TV
      - Radio
      - Muziek
      - DVD
      - Teletekst
      - PowerOff 
    initial: PowerOff
    icon: mdi:remote
  test_old_status:
    name: Oude status
    options:
      - Televisie
      - Smart-TV
      - Netflix
      - Spotify
      - Mediaplayer
      - Apple-TV
      - Radio
      - Muziek
      - DVD
      - Teletekst
      - PowerOff 
    initial: PowerOff
    icon: mdi:remote      

input_boolean:
  ## Switch used for setting the recorder mode on   
  # used for disabling the media center switch-off when a recording is programmed
  recording_mode:
    name: Recorder mode aan
    icon: mdi:video
  ## Enable buttons
  # used for disabling the start of the media mode when lovelace buttons are changing from harmony
  # on will enable the hub to switch, off will disable the hub from switching 
  enable_media_buttons:
    name: Buttons enabled
    initial: on
  ## Test buttons me3dia mode
  # used for testing commands to Harmony Hub
  # remove after completion of media package
  test_hub_command:
    name: Test Hub commando
    initial: off  
  ## Harmony mode selector inputs, 
  # used for manual selection from lovelace interface 
  poweroff:
    name: PowerOff
  television:
    name: Televisie
  mediaplayer:
    name: Mediaplayer
  appletv:
    name: Apple-TV
  radio:
    name: Radio
  music:
    name: Muziek
  dvd:
    name: DVD
  teletext:
    name: Teletekst
  smarttv:
    name: Smart-TV
  netflix:
    name: Netflix
  spotify:
    name: Spotify

sensor:
  ## Media center operations, sensor (Tradfri via Zigbee2MQTT)
  - platform: "mqtt"
    name: tradfri_media_switch
    state_topic: "zigbee2mqtt/tradfri_media_switch"
    availability_topic: "zigbee2mqtt/bridge/state"
    unit_of_measurement: "-"
    value_template: "{{ value_json.linkquality }}"    

switch:
  ## Media center operations, switch (Tradfri via Zigbee2MQTT)
  # used for powering up all media devices
  - platform: "mqtt"
    name: tradfri_media_switch
    state_topic: "zigbee2mqtt/tradfri_media_switch"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_off: "OFF"
    payload_on: "ON"
    value_template: "{{ value_json.state }}"
    command_topic: "zigbee2mqtt/tradfri_media_switch/set"

  ## Template switches synchronizing with the Harmony Hub. Operates reciproke
  # switches are updated from the Harmony hub and set the Harmony hub from Hass  
  - platform: template
    switches:
      poweroff:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'PowerOff') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'PowerOff'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      television:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Televisie') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Televisie'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      mediaplayer:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Mediaplayer') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Mediaplayer'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      appletv:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Apple-TV') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Apple-TV'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      radio:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Radio') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Radio'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''            
      music:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Muziek') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Muziek'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: '' 
      dvd:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'DVD') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'DVD'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      teletext:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Teletekst') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Teletekst'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''                                        
      smarttv:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Smart-TV') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Smart-TV'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      # Added in V0.2.4       
      netflix:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Netflix') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Netflix'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''
      spotify:
        value_template: "{{ is_state_attr('remote.bisschops', 'current_activity', 'Spotify') }}"
        turn_on:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: 'Spotify'
        turn_off:
          service: remote.turn_on
          data:
            entity_id: remote.bisschops
            activity: ''

###############################################################################
#                               Groups
###############################################################################
group:
  ## Group for remotes
  remote:
    name: Afstandsbediening
    entities:
      - remote.bisschops
  ## Group for manual selectors          
  input_media_modes:
    name: Media modes (inputs)
    entities:
      - input_boolean.poweroff
      - input_boolean.television
      - input_boolean.mediaplayer
      - input_boolean.appletv
      - input_boolean.radio
      - input_boolean.music
      - input_boolean.dvd
      - input_boolean.teletext
      - input_boolean.smarttv
      - input_boolean.netflix
      - input_boolean.spotify
  ## Group for HA Bridge sensors    
  habridge_media_modes:
    name: Media modes (HA Bridge)
    entities:
      - bianry_sensor.habridge_poweroff
      - binary_sensor.habridge_television
      - binary_sensor.habridge_smarttv
      - binary_sensor.habridge_mediaplayer
      - binary_sensor.habridge_appletv
      - binary_sensor.habridge_radio
      - binary_sensor.habridge_music
      - binary_sensor.habridge_netflix
      - binary_sensor.habridge_spotify
  ## Group for Harmony template switches
  harmony_media_modes:
    name: Media modes (Harmony Hub)
    entities:
      - switch.poweroff
      - switch.television
      - switch.mediaplayer
      - switch.appletv
      - switch.radio
      - switch.music
      - switch.dvd
      - switch.teletext
      - switch.smarttv      
      - switch.netflix
      - switch.spotify

###############################################################################
#                              Automations
###############################################################################
automation:
  ## Automation for Harmony mode selector inputs, 
  # used for manual selection from lovelace interface
  - alias: "Media acties lovelace buttons"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: 
        - input_boolean.poweroff
        - input_boolean.television
        - input_boolean.mediaplayer
        - input_boolean.appletv
        - input_boolean.radio
        - input_boolean.music
        - input_boolean.dvd
        - input_boolean.teletext
        - input_boolean.smarttv
        - input_boolean.netflix
        - input_boolean.spotify        
      to: 'on'
    action:
      - service: script.media_mode
        data_template:
          new_state: '{{ trigger.to_state.attributes.friendly_name }}'
          old_state: '{{ states.input_select.harmony_livingroom.state }}'
      - service_template: >-
          {% if is_state('switch.tradfri_media_switch', 'on') %}
            script.media_from_on
          {% elif is_state('switch.tradfri_media_switch', 'off') %}
            script.media_from_off
          {% endif%}

  ## Automation for Harmony mode selector from HA Bridge, 
  # used for selection from HA Bridge (Alexa commands)
  - alias: "Media acties HA-Bridge"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - binary_sensor.habridge_television
        - binary_sensor.habridge_mediaplayer
        - binary_sensor.habridge_appletv
        - binary_sensor.habridge_radio
        - binary_sensor.habridge_music
        - binary_sensor.habridge_smarttv
        - binary_sensor.habridge_netflix
        - binary_sensor.habridge_spotify
        - binary_sensor.habridge_poweroff  
      to: 'on'
    action:
      - service: script.set_media_input
        data_template:
          name: '{{ trigger.to_state.object_id }}'  
      # - service: homeassistant.turn_on
      #   data_template:        
      #     entity_id: >-
      #       {% set name = name|replace('habridge_','') %}
      #       {% set entity = ["input_boolean",name]|join(".") %}
      #       {{ entity }}

  ## Automation for Harmony mode selector from Harmony Hub, 
  # used for selection from Harmony Hub
  - alias: "Media acties Harmony Hub"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - switch.poweroff
        - switch.television
        - switch.mediaplayer
        - switch.appletv
        - switch.radio
        - switch.music
        - switch.netflix
        - switch.spotify
      to: 'on'
    action:
      - service: homeassistant.turn_off
        entity_id: input_boolean.enable_media_buttons
      - service: script.set_media_input
        data_template:
          name: '{{ trigger.to_state.object_id }}'
          type: 'harmony'   
      # - service: homeassistant.turn_on
      #   data_template:        
      #     entity_id: >-
      #       {% set entity = ["input_boolean",name]|join(".") %}
      #       {{ entity }}

  ## Test automation for testen Harmony hub commands
  # remove after completion of media package
  - alias: "Test acties Harmony Hub"
    hide_entity: false
    initial_state: 'on'
    trigger:
      platform: state
      entity_id:
        - input_boolean.test_hub_command
      to: 'on'
    action:    
      - service: remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - PowerToggle
          device: Popcorn 

###############################################################################
#                              Templates
###############################################################################


###############################################################################
#                              Scripts
###############################################################################
script:
  ## Script for updating the state of the input buttons in Lovelace
  media_mode:  
    alias: Set media mode script
    sequence:
      - condition: template
        value_template: >-
          {% if newstate != oldstate %}
            false
          {% else %}
            true
          {% endif %}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.test_old_status
          option: '{{ old_state }}'
      - service: input_select.select_option
        data_template:
          entity_id: input_select.harmony_livingroom
          option: '{{ new_state }}'
      - service: input_boolean.turn_off
        data_template:
          entity_id: >-
            {% set media_devices = 
              {
              "PowerOff":"poweroff",
              "Televisie":"television",
              "Mediaplayer":"mediaplayer",
              "Apple-TV":"appletv",
              "Radio":"radio",
              "Muziek":"music",
              "DVD":"dvd",
              "Teletekst":"teletext",
              "Smart-TV":"smarttv",
              "Netflix":"netflix",
              "Spotify":"spotify"
              } 
            %}
            {% set entity = ["input_boolean",media_devices[old_state]]|join(".") %}
            {{ entity }}
  
  ## Script for changing the lovelace buttons to sync with HA Bridge input or Harmony updates
  set_media_input:
    alias: Set media mode vanuit ha bridge of harmony
    sequence:
      - service: homeassistant.turn_on
        data_template:
          entity_id: >-
            {% set name = name|replace('habridge_','') %}
            {% set entity = ["input_boolean",name]|join(".") %}
            {{ entity }}

  ## Script for setting up media when main media switch is still off
  media_from_off:
    alias: Media start als media switch uit
    sequence:
      - service: timer.start
        data:
          entity_id: timer.media_center_delay
      - service: homeassistant.turn_on
        entity_id: switch.tradfri_media_switch 
      - delay: '00:00:30'
      - service: script.media_set_harmony
        data_template:
          current_state: '{{ states.input_select.harmony_livingroom.state }}'
      - delay: '00:00:10'
      - service: remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - PowerToggle
          device: Popcorn


  ## Script for setting up media when main media switch is already on 
  media_from_on:
    alias: Media start als media switch aan
    sequence:
      - service: script.media_set_harmony
        data_template:
          current_state: '{{ states.input_select.harmony_livingroom.state }}'

  ## Script for setting up the Harmony actions 
  media_set_harmony:
    alias: Start Harmony acties
    sequence:
      - service: homeassistant.turn_on
        data_template:
          entity_id: >-
            {% set media_devices = 
              {
              "PowerOff":"poweroff",
              "Televisie":"television",
              "Mediaplayer":"mediaplayer",
              "Apple-TV":"appletv",
              "Radio":"radio",
              "Muziek":"music",
              "DVD":"dvd",
              "Teletekst":"teletext",
              "Smart-TV":"smarttv",
              "Netflix":"netflix",
              "Spotify":"spotify"
              }           
            %}
            {% set entity = ["switch",media_devices[current_state]]|join(".") %}
            {{ entity }}
      - delay: '00:00:01'
      - service_template: >-
          {% if current_state == "Spotify"%}
            script.media_mode_spotify 
          {% elif current_state == "Netflix" %}
            script.media_mode_netflix 
          {% elif current_state == "Radio" %}
            script.media_mode_radio 
          {% elif current_state == "Muziek" %}
            script.media_mode_music 
          {% elif current_state == "PowerOff" %}
            script.media_mode_poweroff 
          {% else %}
            script.media_mode_video
          {% endif %}

  ## Script for additional settings when Spotify mode is set 
  media_mode_spotify:
    alias: Aanvullende media settings Spotify
    sequence:
      - delay: '00:00:05'
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: Versterker
          command:
            - ModeStereo
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: Spotify Music - Luister gratis op LG TV
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Normaal"
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'TV mode'

  ## Script for additional settings when Netflix mode is set 
  media_mode_netflix:
    alias: Aanvullende media settings Netflix
    sequence:
      - delay: '00:00:05' 
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: Versterker
          command:
            - ModeDolbyPLII
      - service: media_player.select_source
        data:
          entity_id: media_player.living_room_tv
          source: Netflix
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Video"
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'TV mode'    

  ## Script for additional settings when Radio mode is set 
  media_mode_radio:
    alias: Aanvullende media settings Radio
    sequence:
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: Versterker
          command:
            - ModeStereo
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Normaal"             
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'Verlichting aan'  

  ## Script for additional settings when Music mode is set 
  media_mode_music:
    alias: Aanvullende media settings Music
    sequence:
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: Versterker
          command:
            - ModeStereo
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Normaal"
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'Verlichting aan'

  ## Script for additional settings when Poweroff is set 
  media_mode_poweroff:
    alias: Aanvullende media settings PowerOff
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Normaal"
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'Verlichting aan'

  ## Script for additional settings when any video mode is set 
  media_mode_video:
    alias: Aanvullende media settings video
    sequence:
      - service: 
          remote.send_command
        data:
          entity_id: remote.bisschops
          device: Versterker
          command:
            - ModeDolbyPLII
      - service: input_select.select_option
        data:
          entity_id: input_select.livingroom_lights_mode
          option: "Video"
      - condition: state
        entity_id: input_boolean.livingroom_lights_status
        state: 'on'
      - service: script.set_hue_scene
        data_template:
          group: 'Woonkamer'
          name: 'TV mode'

  ## Script for audio mode settings when music modes are selected 
  amplifier_mode_music:
    alias: Set device mode muziek
    sequence:
      - service:  
          remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - ModeStereo
          device: Versterker

  ## Script for audio mode settings when video modes are selected 
  amplifier_mode_dolby:
    alias: Set device mode Dolby
    sequence:
      - service:  
          remote.send_command
        data:
          entity_id: remote.bisschops
          command:
            - ModeDolbyPLII
          device: Versterker

###############################################################################
#                              Timers
###############################################################################
timer:
  media_center_delay:
    duration: '00:00:30'
  media_center_dummy:
    duration: '00:00:00'    